{{define "client_helpers"}}
const createHTTPRequest = (body: object = {}, headers: object = {}): object => {
  return {
    method: 'POST',
    headers: { ...headers, 'Content-Type': 'application/json' },
    body: JSON.stringify(body || {})
  }
}

const buildResponse = (res: Response): Promise<any> => {
  return res.text().then(text => {
    let data
    try {
      data = JSON.parse(text)
    } catch(err) {
      throw new WebRPCError({code: ErrorCode.ErrInternal, msg: "failed to parse server response", cause: err})
    }
    if (!res.ok) {
      const err = data as ErrorPayload;
      throw new WebRPCError({code: err.code as ErrorCode, msg: err.msg, cause: err.cause ? new Error(err.cause) : undefined})
    }
    return data
  })
}

export type Fetch = (input: RequestInfo, init?: RequestInit) => Promise<Response>
{{end}}
