{{define "types"}}
//
// Types
//
{{exportKeyword}}class WebRPCError extends Error {
    constructor(msg = "Error", status = 400, code = "BadRequest") {
        super(msg);
        this.name = 'WebRPCError'
        this.msg = msg;
        this.status = status;
        this.code = code;
    }
}

{{ if .Messages -}}
{{range .Messages -}}

{{if .Type | isEnum -}}
{{$enumName := .Name}}
{{exportKeyword}}var {{$enumName}};
(function ({{$enumName}}) {
{{- range $i, $field := .Fields}}
  {{$enumName}}["{{$field.Name}}"] = "{{$field.Name}}"
{{- end}}
})({{$enumName}} || ({{$enumName}} = {}))
{{end -}}

{{- if .Type | isStruct  }}
{{exportKeyword}}class {{.Name}} {
  constructor(_data) {
    this._data = {}
    if (_data) {
      {{range .Fields -}}
      this._data['{{. | exportedJSONField}}'] = _data['{{. | exportedJSONField}}']
      {{end}}
    }
  }
  {{ range .Fields -}}
  {{if . | exportableField}}
  get {{. | exportedJSONField}}() {
    return this._data['{{. | exportedJSONField }}']
  }
  set {{. | exportedJSONField}}(value) {
    this._data['{{. | exportedJSONField}}'] = value
  }
  {{end}}
  {{end}}
  toJSON() {
    return this._data
  }
}
{{end -}}
{{end -}}
{{end -}}

{{end}}
